"use strict";
// Fix btoa and atob for NodeJS
if (typeof self === "undefined") {
    var _global = global;
    _global.btoa = function (data) { return new Buffer(data, "binary").toString("base64"); };
    _global.atob = function (data) { return new Buffer(data, "base64").toString("binary"); };
}
var Base64Url = (function () {
    function Base64Url() {
    }
    Base64Url.buffer2string = function (buffer) {
        var res = "";
        for (var i = 0; i < buffer.length; i++)
            res += String.fromCharCode(buffer[i]);
        return res;
    };
    Base64Url.string2buffer = function (binaryString) {
        var res = new Uint8Array(binaryString.length);
        for (var i = 0; i < binaryString.length; i++)
            res[i] = binaryString.charCodeAt(i);
        return res;
    };
    Base64Url.encode = function (value) {
        var str = this.buffer2string(value);
        var res = btoa(str)
            .replace(/=/g, "")
            .replace(/\+/g, "-")
            .replace(/\//g, "_");
        return res;
    };
    Base64Url.decode = function (base64url) {
        while (base64url.length % 4) {
            base64url += "=";
        }
        var base64 = base64url
            .replace(/\-/g, "+")
            .replace(/_/g, "/");
        return this.string2buffer(atob(base64));
    };
    return Base64Url;
}());
exports.Base64Url = Base64Url;
